// created by liuhan on 2023/9/15
// Submodule of HeliosRobotSystem
// for more see document: https://swjtuhelios.feishu.cn/docx/MfCsdfRxkoYk3oxWaazcfUpTnih?from=from_copylink
#pragma once

// ros
#include "rclcpp/rclcpp.hpp"
#include "tf2/convert.h"
#include "geometry_msgs/msg/transform_stamped.hpp"
#include "tf2_ros/buffer.h"
// custom
#include "BasePredictor.hpp"
#include "CeresSolver.hpp"
#include "KalmanFilter.hpp"
// opencv
#include"opencv2/imgproc.hpp"
#include"opencv2/highgui.hpp"
#include"opencv2/core.hpp"
// eigen 
#include"eigen3/Eigen/Core"
#include"eigen3/Eigen/Dense"
#include"eigen3/Eigen/Geometry"



// auto generated by ros2 generate_parameter_library
// https://github.com/PickNikRobotics/generate_parameter_library
#include "helios_autoaim_parameters.hpp"

namespace helios_cv {

class EnergyPredictor : public BasePredictor {
public:
    EnergyPredictor(helios_autoaim::Params::Predictor::EnergyPredictor predictor_params);
    
    void set_cam_info(sensor_msgs::msg::CameraInfo::SharedPtr cam_info) override;

    void init_predictor(helios_autoaim::Params::Predictor predictor_param, tf2_ros::Buffer::SharedPtr tf_buffer) override;

    helios_rs_interfaces::msg::Target predict_target(helios_rs_interfaces::msg::Armors armors, const rclcpp::Time& now) override;

    void set_params(helios_autoaim::Params::Predictor predictor_params) override;

    std::vector<double> get_state() const override;
private:
    helios_autoaim::Params::Predictor::EnergyPredictor predictor_params_;

    tf2_ros::Buffer::SharedPtr tf_buffer_;
};


} // namespace helios_cv