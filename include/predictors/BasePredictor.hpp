// created by liuhan on 2023/9/15
// Submodule of HeliosRobotSystem
// for more see document: https://swjtuhelios.feishu.cn/docx/MfCsdfRxkoYk3oxWaazcfUpTnih?from=from_copylink
#pragma once

#include "helios_rs_interfaces/msg/target.hpp"
#include "helios_rs_interfaces/msg/armors.hpp"
#include "sensor_msgs/msg/camera_info.hpp"
#include "tf2_ros/buffer.h"

// auto generated by ros2 generate_parameter_library
// https://github.com/PickNikRobotics/generate_parameter_library
#include "helios_autoaim_parameters.hpp"
#include <vector>

namespace helios_cv {

class BasePredictor {
public:
    BasePredictor() = default;

    virtual void set_cam_info(sensor_msgs::msg::CameraInfo::SharedPtr cam_info) = 0;

    virtual void init_predictor(std::shared_ptr<helios_autoaim::Params> params, tf2_ros::Buffer::SharedPtr tf_buffer) = 0;

    virtual helios_rs_interfaces::msg::Target predict_target(helios_rs_interfaces::msg::Armors armors, const rclcpp::Time& now) = 0;

    virtual void set_params(std::shared_ptr<helios_autoaim::Params> params) = 0;

    virtual std::vector<double> get_state() const = 0;

    ~BasePredictor() = default;
private:
};

} // namespace helios_cv