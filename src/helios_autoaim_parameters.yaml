helios_autoaim:
  state: {
    type: int,
    default_value: 0,
    description: "state",
  }
  transition: {
    type: int,
    default_value: 0,
    description: "transition",
  }
  armor_autoaim: {
    type: bool,
    default_value: true,
    description: "armor or energy",
  }
  use_traditional: {
    type: bool,
    default_value: true,
    description: "use traditional method",
  }
  debug: {
    type: bool,
    default_value: true,
    description: "debug mode",
  }
  detector:
    armor_detector:
      detect_blue_color: {
        type: bool,
        default_value: true,
        description: "detect blue color",
      }
      binary_thres: {
        type: int,
        default_value: 100,
        description: "binary threshold",
      }
      number_classifier: 
        module_path: {
          type: string,
          default_value: "/home/jk/Projects/HeliosRS/src/helios_autoaim/module/mlp.onnx",
          description: "path of number classifier",
        }
        label_path: {
          type: string,
          default_value: "/home/jk/Projects/HeliosRS/src/helios_autoaim/module/label.txt",
          description: "path of number classifier",
        }
        threshold: {
          type: double,
          default_value: 70.0,
          description: "threshold of number classifier",
        }
      light:
        min_ratio: {
          type: double,
          default_value: 0.1,
          description: "min ratio of light",
        }
        max_ratio: {
          type: double,
          default_value: 0.4,
          description: "max ratio of light",
        }
        max_angle: {
          type: double,
          default_value: 40.0,
          description: "max angle of light",
        }
      armor:
        min_light_ratio: {
          type: double,
          default_value: 0.7,
          description: "min ratio of light",
        }
        min_small_center_distance: {
          type: double,
          default_value: 0.8,
          description: "min distance of small center",
        }
        max_small_center_distance: {
          type: double,
          default_value: 3.0,
          description: "max distance of small center",
        }
        min_large_center_distance: {
          type: double,
          default_value: 3.0,
          description: "max distance of big center",
        }
        max_large_center_distance: {
          type: double,
          default_value: 9.2,
          description: "max distance of big center",
        }
        max_angle: {
          type: double,
          default_value: 35.0,
          description: "max angle of armor",
        }
    energy_detector:
      detect_blue_color: {
        type: bool,
        default_value: true,
        description: "detect blue color",
      }
      binary_thres: {
        type: int,
        default_value: 100,
        description: "binary threshold",
      }
  predictor:
    target_frame: {
        type: string,
        default_value: "gyro",
        description: "target frame of coordinate transformation",
    }
    armor_predictor:
      ekf: 
        sigma2_q_xyz: {
          type: double,
          default_value: 100.0,
        }
        sigma2_q_yaw: {
          type: double,
          default_value: 25.0,
        }
        sigma2_q_r: {
          type: double,
          default_value: 800.0,
        }
        r_xyz_factor: {
          type: double,
          default_value: 0.05,
        }
        r_yaw: {
          type: double,
          default_value: 0.02
        }
      max_lost: {
        type: int,
        default_value: 5,
        description: "max lost times of armor"
      }
      max_detect: {
        type: int,
        default_value: 5,
        description: "max detect times of armor"
      }
      max_match_distance: {
        type: double,
        default_value: 0.8,
        description: "max match distance of armor"
      }
      max_match_yaw_diff: {
        type: double,
        default_value: 0.7,
        description: "max match yaw diff of armor"
      }
      target_frame: {
        type: string,
        default_value: "gyro",
        description: "target frame of coordinate transformation",
      }
      lost_time_thres_: {
        type: double,
        default_value: 0.5,
        description: "lost time threshold",
      }
      car_name: {
        type: int,
        default_value: 2,
        description: "car name",
      }
    energy_predictor:
      temp: {
        type: int,
        default_value: 10,
        description: "temp",
      }
